[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [{ include = "src" }, { include = "tests" }]

[project]
name = "SentinelOneCollector"
version = "1.18.18"
description = "Collector for SentinelOne EDR."
readme = "README.md"

requires-python = ">=3.11,<3.13"
dynamic = ["dependencies"]

[tool.poetry.dependencies]
pyobas = [
    {markers = "extra == 'prod' and extra != 'local' and extra != 'current'",version = "^1.18.18"},
    {markers = "extra == 'local' and extra != 'current' and extra != 'prod'",path = "../../client-python", develop = true},
    {markers = "extra == 'current' and extra != 'prod' and extra != 'local'",git = "https://github.com/OpenAEV-Platform/client-python.git", branch = "release/current"},
]
pydantic = "^2.11.7"
pydantic-settings = "^2.10.1"
requests = "^2.32.5"

[tool.poetry.extras]
prod = ["pyobas"]
current = ["pyobas"]
local = ["pyobas"]

[tool.poetry.group.dev.dependencies]
isort = "^6.0.1"
ruff = "^0.12.11"
mypy = "^1.17.1"
black = "^25.1.0"
flake8 = "^7.3.0"
pip-audit = "^2.9.0"
pre-commit = "^4.3.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.4.1"
polyfactory = "^2.22.2"

[project.scripts]
SentinelOneCollector = "src.__main__:main"

[tool.pytest.ini_options]
testpaths = ["./tests"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

target-version = "py312"

[tool.ruff.lint]
# Never enforce `I001` (unsorted import). Already handle with isort
# Never enforce `E501` (line length violations). Already handle with black
# Never enforce `F821` (Undefined name `null`). incorrect issue with notebook
# Never enforce `D213` (Multi-line docstring summary should start at the second line) conflict with our docstring convention
# Never enforce `D211` (NoBlankLinesBeforeClass)`
# Never enforce `G004` (logging-f-string) Logging statement uses f-string
# Never enforce `TRY003`() Avoid specifying long messages outside the exception class not useful
# Never enforce `D104` (Missing docstring in public package)
# Never enforce `D407` (Missing dashed underline after section)
# Never enforce `D408` (Section underline should be in the line following the sectionâ€™s name)
# Never enforce `D409` (Section underline should match the length of its name)
ignore = [
    "I001",
    "D203",
    "E501",
    "F821",
    "D205",
    "D213",
    "D211",
    "G004",
    "TRY003",
    "D104",
    "D407",
    "D408",
    "D409",
]
select = ["E", "F", "W", "D", "G", "T", "B", "C", "N", "I", "S"]

[tool.mypy]
strict = true
exclude = [
    '^tests',
    '^docs',
    '^build',
    '^dist',
    '^venv',
    '^site-packages',
    '^__pypackages__',
    '^.venv',
]
plugins = ["pydantic.mypy"]
